{"address":"opc.tcp://10.99.15.84:4842/freeopcua/server","raml":"#%RAML 0.8\r\ntitle: OPC RAML\r\nbaseUri: OPC\r\nversion: 1\r\n#description: This is the RAML file for OPC Client in PTL Library.\r\nschemas:\r\n  - basic_response: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"responsecode\": \r\n          {\r\n            \"type\": \"number\"\r\n          },\r\n          \"message\":\r\n          {\r\n            \"type\": \"string\"\r\n          },\r\n          \"missing\":\r\n          {\r\n            \"type\": \"array\",\r\n            \"items\":\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\":\r\n              {\r\n                \"key\":\r\n                {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"datatype\":\r\n                {\r\n                  \"type\": \"string\"\r\n                }\r\n              },\r\n              \"required\" : [\"key\", \"datatype\"]\r\n            },\r\n            \"minItems\" : 1\r\n          }\r\n        },\r\n        \"required\" : [\"responsecode\", \"message\"]\r\n      }\r\n  - discover_response: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"responsecode\": \r\n          {\r\n            \"type\": \"number\"\r\n          },\r\n          \"devices\":\r\n          {\r\n            \"type\": \"array\",\r\n            \"items\" :\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": \r\n              {\r\n                \"displayname\":\r\n                {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"macid\":\r\n                {\r\n                  \"type\": \"string\"\r\n                }\r\n              },\r\n              \"required\" : [\"macid\"]\r\n            },\r\n            \"minItems\" : 1\r\n          }\r\n        },\r\n        \"required\" : [\"responsecode\"]\r\n      }\r\n  - status_response: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"responsecode\": \r\n          {\r\n            \"type\": \"number\"\r\n          },\r\n          \"status\":\r\n          {\r\n            \"type\": \"string\",\r\n            \"enum\" : [\"active\", \"deactive\"]\r\n          },\r\n          \"observedtime\":\r\n          {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\" : [\"responsecode\", \"status\", \"observedtime\"]\r\n      }\r\n  - raml_response: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"responsecode\": \r\n          {\r\n            \"type\": \"number\"\r\n          },\r\n          \"raml\":\r\n          {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\" : [\"responsecode\"]\r\n      }\r\n  - addDevice_payload: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"deviceid\":\r\n          {\r\n            \"type\": \"string\"\r\n          },\r\n          \"macid\":\r\n          {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\" : [\"deviceid\", \"macid\"]\r\n      }\r\n  - deleteDevice_payload: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"deviceid\":\r\n          {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"required\" : [\"deviceid\"]\r\n      }\r\n  - setStatus_payload: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"deviceid\":\r\n          {\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\":\r\n          {\r\n            \"type\": \"string\",\r\n            \"enum\" : [\"active\", \"deactive\"]\r\n          }\r\n        },\r\n        \"required\" : [\"deviceid\", \"status\"]\r\n      }\r\n  - state_response: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"responsecode\": {\r\n            \"type\": \"number\"\r\n          },\r\n          \"deviceid\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"properties\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"observedtime\": {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"status\": {\r\n                  \"type\": \"string\",\r\n                  \"enum\": [\"success\",\"failure\"]\r\n                },\r\n                \"message\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              },\r\n              \"patternProperties\": {\r\n                \"^[a-z]+$\": {\r\n                  \"comment\" : \"Name of the property of any device should be in small-caps.\"\r\n                }\r\n              },\r\n              \"additionalProperties\": false,\r\n              \"minProperties\": 3,\r\n              \"required\": [\"observedtime\",\"status\"]\r\n            }\r\n          }\r\n        },\r\n        \"required\": [\"responsecode\",\"deviceid\"]\r\n      }\r\n  - props_payload: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"deviceid\":\r\n          {\r\n            \"type\": \"string\"\r\n          },\r\n          \"properties\":\r\n          {\r\n            \"type\": \"array\",\r\n            \"items\" :\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": \r\n              {\r\n                \"property\": \r\n                {\r\n                  \"type\": \"string\"\r\n                }\r\n              },\r\n              \"required\": [\"property\"]\r\n            },\r\n            \"minItems\" : 1\r\n          }\r\n        },\r\n        \"required\": [\"deviceid\"]\r\n      }  \r\n  - props_response: |\r\n      {\r\n        \"type\": \"object\",\r\n        \"properties\": \r\n        {\r\n          \"deviceid\":\r\n          {\r\n            \"type\": \"string\"\r\n          },\r\n          \"properties\":\r\n          {\r\n            \"type\": \"array\",\r\n            \"items\" :\r\n            {\r\n              \"type\": \"object\",\r\n              \"properties\": \r\n              {\r\n                \"property\": \r\n                {\r\n                  \"type\": \"string\"\r\n                },\r\n                \"status\": \r\n                {\r\n                  \"type\": \"string\",\r\n                  \"enum\": [\"success\", \"failure\"]\r\n                },\r\n                \"message\": \r\n                {\r\n                  \"type\": \"string\"\r\n                }\r\n              },\r\n              \"required\": [\"property\", \"status\"]\r\n            },\r\n            \"minItems\" : 1\r\n          }\r\n        },\r\n        \"required\": [\"deviceid\"]\r\n      }\r\n/:\r\n  get:\r\n    description: \"Discover Devices : Accepts OPCURL in json packet & returns the macid/senid of discovered devices.\"\r\n    queryParameters: \r\n      opcurl:\r\n        type: string\r\n        required: true\r\n    responses: \r\n      200:\r\n        description: Returns ResponseCode & macid/senid of discovered devices on the given url.\r\n        body: \r\n          application/json:\r\n            schema: discover_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"devices\": \r\n                [\r\n                  {\r\n                    \"displayname\": \"Temperature\",\r\n                    \"macid\": \"2:2001\"\r\n                  },\r\n                  {\r\n                    \"displayname\": \"Pressure\",\r\n                    \"macid\": \"2:2002\"\r\n                  },\r\n                  {\r\n                    \"displayname\": \"Humidity\",\r\n                    \"macid\": \"2:2003\"\r\n                  }\r\n                ]\r\n              }\r\n      400:\r\n        description: Returns a failure message if wrong or invalid URL is provided.\r\n        body: \r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\" : 400,\r\n                \"message\": \"Invalid URL\"\r\n              }\r\n  post:\r\n    description: \"Add Device : Accepts DeviceID & macid/senid in json packet returns the success or failure message\"\r\n    body: \r\n      application/json:\r\n        schema: addDevice_payload\r\n        example: |\r\n          {\r\n            \"deviceid\": \"xxxxxxxx\",\r\n            \"macid\": \"2:2001\"\r\n          }\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"message\": \"Success\"\r\n              }\r\n      400:\r\n        description: Returns a failure message if invalid macid is provided.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 400,\r\n                \"message\": \"Invalid macid.\"\r\n              }\r\n      500:\r\n        description: Returns a failure message if server has no nodes.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 500,\r\n                \"message\": \"Subscription Failed or No Node Exists on the Server\"\r\n              }\r\n  delete:\r\n    description: \"Delete Device : Accepts DeviceID in json packet & returns the success or failure message\"\r\n    body: \r\n      application/json:\r\n        schema: deleteDevice_payload\r\n        example: |\r\n          {\r\n            \"deviceid\": \"xxxxxxxx\"\r\n          }\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"message\": \"Success/Failure\"\r\n              }\r\n      400:\r\n        description: Returns a failure message if invalid deviceid is provided.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 400,\r\n                \"message\": \"Invalid deviceid\"\r\n              } \r\n/raml:\r\n  get:\r\n    description: \"Get Device RAML: If DeviceID is provided,it will return the data of `<macid>.raml`.If no DeviceID is provided, it will return this `OPC.raml` file.\"\r\n    queryParameters:\r\n      deviceid:\r\n        type: string\r\n        required: false\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: raml_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"raml\": \"Contents of RAML file.\"\r\n              }\r\n      400:\r\n        description: Returns a failure message if invalid deviceid is provided or RAML file not present.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 400,\r\n                \"message\": \"Invalid deviceid\"\r\n              }\r\n/status:\r\n  get:\r\n    description: \"Get Device Status : Accepts DeviceID as json parameters & returns the current status of Device.\"\r\n    queryParameters: \r\n      deviceid:\r\n        type: string\r\n        required: true\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: status_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"status\": \"active\",\r\n                \"observedtime\": \"2017-03-15T14:40:35Z\"\r\n              }\r\n      400:\r\n        description: Returns a failure message if property not activated.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 400,\r\n                \"message\": \"Property not registered.\"\r\n              }    \r\n  post:\r\n    description: \"Set Device Status : Accepts DeviceID & Status as json parameters & sets the status of the device as requested. Returns the success or failure message.\"\r\n    body: \r\n      application/json:\r\n        schema: setStatus_payload\r\n        example: |\r\n          {\r\n            \"deviceid\": \"xxxxxxxx\",\r\n            \"status\": \"deactive\"\r\n          }\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: status_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"status\": \"deactive\",\r\n                \"observedtime\": \"2017-03-15T14:40:35Z\"\r\n              }\r\n      400:\r\n        description: Returns a failure message if invalid DeviceID is provided.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 400,\r\n                \"message\": \"Property not registered.\"\r\n              }\r\n      406:\r\n        description: Returns a failure message if invalid value in status is provided.\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 406,\r\n                \"message\": \"Wrong value of status key.\"\r\n              } \r\n/state:\r\n  get:\r\n    description: \"Get Device State : Accepts DeviceID as json parameters & returns the current status of Device State.\"\r\n    queryParameters:\r\n      deviceid:\r\n        type: string\r\n        required: true\r\n      property:\r\n        type: string\r\n        required: false\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: state_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 200,\r\n                \"deviceid\" : \"XXXXX\",\r\n                \"properties\" : \r\n                [\r\n                  {\r\n                    \"status\" : \"success\",\r\n                    \"temperature\": \"xxxxxxxxx\",\r\n                    \"observedtime\" : \"2017-03-15T14:40:35Z\"\r\n                  }\r\n                ]\r\n              }\r\n      400:\r\n        description: Returns a failure message\r\n        body:\r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\": 400,\r\n                \"message\": \"DeviceID not activated.\"\r\n              }\r\n/properties:\r\n  post:\r\n    description: \"Register Device Properties : Accepts DeviceID and properties as json parameters & registers those properties.Returns success or failure message.\"\r\n    body: \r\n      application/json:\r\n        schema: props_payload\r\n        example: |\r\n          {\r\n            \"deviceid\" : \"XXXXX\",\r\n            \"properties\" : \r\n            [\r\n              {\r\n                \"property\" : \"temperature\"\r\n              }\r\n            ]\r\n          }\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: props_response\r\n            example: |\r\n              {\r\n                \"responsecode\" : 200,\r\n                \"deviceid\" : \"XXXXX\",\r\n                \"properties\" : \r\n                [\r\n                  {\r\n                    \"property\" : \"temperature\",\r\n                    \"status\" : \"success\"\r\n                  }\r\n                ]\r\n              }\r\n      400:\r\n        description: Returns a failure message if invalid deviceid is provided.\r\n        body: \r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\" : 400,\r\n                \"message\": \"Invalid deviceid.\"\r\n              }\r\n  delete:\r\n    description: \"Deregister Device Properties : Accepts DeviceID and property as json parameters & returns the success or failure message.\"\r\n    body: \r\n      application/json:\r\n        schema: props_payload\r\n        example: |\r\n          {\r\n            \"deviceid\" : \"XXXXX\",\r\n            \"properties\" : \r\n            [\r\n              {\r\n                \"property\" : \"temperature\"\r\n              }\r\n            ]\r\n          }\r\n    responses: \r\n      200:\r\n        body: \r\n          application/json:\r\n            schema: props_response\r\n            example: |\r\n              {\r\n                \"responsecode\" : 200,\r\n                \"deviceid\" : \"XXXXX\",\r\n                \"properties\" : \r\n                [\r\n                  {\r\n                    \"property\" : \"temperature\",\r\n                    \"status\" : \"success\"\r\n                  }\r\n                ]\r\n              }\r\n      400:\r\n        body: \r\n          application/json:\r\n            schema: basic_response\r\n            example: |\r\n              {\r\n                \"responsecode\" : 400,\r\n                \"message\": \"Invalid deviceid.\"\r\n              }\r\n","responsecode":200}